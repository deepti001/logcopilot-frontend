export interface VulnerabilityRecord {
  id: string; // CVE ID
  severity: 'Critical' | 'High' | 'Medium' | 'Low';
  component: string;
  description: string;
  aiRecommendation: string;
  layer?: string; // For single build context
  
  // New fields for enhanced table display
  packageInfo?: {
    name: string;
    installedVersion: string;
    fixedVersion?: string;
  };
  repo?: string;
  image?: string;
  cvssScore?: number;
  
  // Detection tracking
  firstDetected: Date; // When first discovered across all scans
  lastSeen: Date; // Most recent scan where this was found
  detectionHistory: DetectionEvent[];
}

export interface DetectionEvent {
  buildId: string;
  environment: string;
  release: string;
  timestamp: Date;
  scanType: 'scheduled' | 'manual' | 'ci/cd';
  imageInfo: {
    name: string;
    tag: string;
    baseImage: string;
  };
}

export interface VulnerabilityDatabase {
  [cveId: string]: VulnerabilityRecord;
}

export interface BuildScan {
  buildId: string;
  environment: string;
  release: string;
  timestamp: Date;
  imageInfo: {
    name: string;
    tag: string;
    baseImage: string;
  };
  vulnerabilities: string[]; // Array of CVE IDs found in this scan
}

export interface VulnerabilityDTO {
  name: string;                 // CVE-2025-9230 (a.k.a cve_id)
  cve_id?: string;
  severity: "CRITICAL" | "HIGH" | "MEDIUM" | "LOW" | "UNKNOWN";
  description?: string;
  uri?: string;

  package_name?: string;
  package_version?: string;
  fixed_version?: string | null;          // (ask backend to add if available)

  cvss_score?: number | null;             // legacy
  nvd_cvss_v3_score?: number | null;
  nvd_cvss_v3_vector?: string | null;
  nvd_published_date?: string | null;
  nvd_last_modified?: string | null;
  nvd_references?: string[] | null;

  // ðŸ”§ ask backend to add (see section 4)
  repo?: string | null;
  image?: string | null;
  release_id?: string | null;
  first_seen_build?: string | null;
  first_seen_time?: string | null;        // ISO string (IST server-side preferred)
}

export interface SuggestionResponse {
  suggestion: string;
}
